{"version":3,"sources":["index.tsx"],"names":["StyledSpinner","ActivityIndicator","color","space","position","Spinner","props","ref","resolvedProps"],"mappings":"wUAAA,qDACA,yCACA,wEACA,2CACA,2D,mIAGA,GAAMA,CAAAA,aAAa,CAAG,oBAAOC,8BAAP,EACpBC,mBADoB,CAEpBC,mBAFoB,CAGpBC,sBAHoB,CAAtB,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAuBC,GAAvB,CAAoC,CAClD,GAAMC,CAAAA,aAAa,CAAG,sCAAmB,SAAnB,CAA8BF,KAA9B,CAAtB,CACA,MACE,8BAAC,aAAD,wBACE,UAAU,KADZ,CAEE,kBAAkB,CAAC,SAFrB,EAGME,aAHN,EAIE,GAAG,CAAED,GAJP,8EADF,CAQD,CAVD,C,aAYe,gBAAK,sBAAWF,OAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport styled from 'styled-components/native';\nimport { color, space, position } from 'styled-system';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISpinnerProps } from './types';\n\nconst StyledSpinner = styled(ActivityIndicator)<ISpinnerProps>(\n  color,\n  space,\n  position\n);\nconst Spinner = (props: ISpinnerProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Spinner', props);\n  return (\n    <StyledSpinner\n      accessible\n      accessibilityLabel=\"loading\"\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Spinner));\nexport type { ISpinnerProps };\n"]}